{
  "author": "SiFive",
  "name": "rocket-chip-1",
  "email": [],
  "urls": [
    {
      "url": "https://github.com/sifive/rocket-chip-1"
    },
    {
      "url": "https://www2.eecs.berkeley.edu/Pubs/TechRpts/2016/EECS-2016-17.pdf"
    },
    {
      "url": "https://www.sifive.com/"
    }
  ],
  "yaynahs": [
    {
      "text": "Generating RTL with chisel allows making generalized, modular and parametric generators",
      "isYay": true
    },
    {
      "text": "Generated RTL is harder to debug in waveform analysers",
      "isYay": false
    }
  ],
  "specifications": [
    {
      "modules": "RV32IMA,RV32IMAF",
      "isAsic": false,
      "debug": "",
      "size": "6900-26000",
      "clock": "25-40",
      "notes": "ZedBoard with a Xilinx ZYNQ 7020 FPGA",
      "benchmarks": [
        {
          "name": "Coremark",
          "url": "https://www.csem.ch/Doc.aspx?id=49372",
          "score": "2.16",
          "notes": ""
        }
      ]
    }
  ],
  "variants": [
    {
      "name": "RV32IMA",
      "nameId": "",
      "description": "",
      "urls": [],
      "yaynahs": [],
      "specifications": [],
      "instructions": [
        {
          "name": "li",
          "clocks": "1-8",
          "notes": ""
        }
      ]
    }
  ],
  "description": "Rocket Chip is an open-source Sysem-on-Chip design generator that emits synthesizable RTL. It leverages the Chisel hardware construction language to compose a library of sophisticated generators for cores, caches, and interconnects into an integrated SoC. Rocket Chip generates general-purpose processor cores that use the open RISC-V ISA, and provides both an in-order core generator (Rocket) and an out-of-order core generator (BOOM). For SoC designers interested in utilizing heterogeneous specialization for added efficiency gains, Rocket Chip supports the integration of custom accelerators in the form of instruction set extensions, coprocessors, or fully independent novel cores. Rocket Chip has been taped out (manufactured) eleven times, and yielded functional silicon prototypes capable of booting Linux.",
  "language": "Chisel(Scala) -> Verilog",
  "license": ""
}